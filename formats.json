species db format - 
{
  "id":"4 letter string",
  "name":"string - english name",
  "sciname":"string - latin name",
  "bandsize":"string",
  "category": {
    "basic":"string - bird/amph/mam/rept",
    "detail":"string - heron/woodpecker/etc"
  },
  "designation":"string - prov/fed/both",
  "bclist":"string- blue/red/yellow"
}
drug db format
{
  "arcname":"string",
  "genericname":"string",
  "brands":["strings"],
  "type":"string - antibiotic, painkiller, etc",
  "options":[{
    "type":"capsule, tablet, liquid",
    "amount":"int - mg/ml",
    "route":"PO,SQ"
  }],
  "dose":{
    "general":{
      "loading":"int",
      "low":"int",
      "high":"int",
      "schedule":"string - BID, SID, etc",
      "doses":"int - 10",
    }, // probably specify range something like this?
    "rabbit":{
      "loading":"int",
      "low":"int",
      "high":"int",
      "schedule":"string",
      "doses":"int",
    } // specify unique for each species with different dosing, forin through
  }
}
patient db format
{
  "year":21,
  "id":2874,
  "species":"AMRO",
  "weight":[{
    "timestamp":"isodate", // I'm not sure if I want to use proper date objects here or just write some regex and store as a custom string
    "grams":"int",
    "kilos":"int"
  }],
  "location":{
    "area":"string",
    "room":"string",
    "cage":"string"
  },
  "drugs":[{ // the thinking here is to do an object every time it's prescribed, but not for each dose - so if you do two 5-day courses of a drug, that's two objects
    "arcname":"string",
    "type":"string - capsule/tablet/liquid",
    "dose":"int -mg/ml",
    "amount":"int - round to 2 decimal places",
    "startdate":"isodate",
    "schedule":"string - BID, SID",
    "doses":"int - 10", // user can enter number of doses, number of days at that schedule, etc
    "when":["date"],// array of all the dates we want - day and AM/MID/PM?
    "prescribedby":"string - use initials"
  }]
}
